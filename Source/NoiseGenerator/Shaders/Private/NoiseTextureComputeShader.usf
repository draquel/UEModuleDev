#include "/Engine/Public/Platform.ush"
#include "Noise.usf"

RWTexture2D<float3> RenderTarget;
StructuredBuffer<ShaderNoiseSettings> NoiseSettings;

float3 Position;
float3 Size;
int StepSize;
int SettingsSize;

[numthreads(THREADS_X, THREADS_Y, THREADS_Z)]
void NoiseTextureComputeShader(	uint3 DispatchThreadId : SV_DispatchThreadID, uint GroupIndex : SV_GroupIndex ) {

	float noise = 0;
	float gain = 0;
	for (int i = 0; i < SettingsSize; i++) {
		ShaderNoiseSettings Settings = NoiseSettings[i];
		gain += Settings.Gain;
		noise += Noise(float2(DispatchThreadId.x,DispatchThreadId.y)*StepSize,Position,Settings) * Settings.Gain;
	}
	noise /= gain;
	RenderTarget[DispatchThreadId.xy] = noise;
}